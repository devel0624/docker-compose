#!/usr/bin/env bash

default="\033[0m"
red="\033[31m"
green="\033[32m"
yellow="\033[33m"

PROPERTY_FILE="$SCRIPT_DIRECTORY"/script.properties

function getProperty {
   PROP_KEY=$1
   PROP_VALUE=`cat $PROPERTY_FILE | grep "$PROP_KEY" | cut -d'=' -f2`

   RAW_FILE_URL="${PROP_VALUE/https:\/\/github.com/https://raw.githubusercontent.com}"
   echo "${RAW_FILE_URL/e.git/e}"
}

echo "## Reading property from $PROPERTY_FILE"
REPOSITORY_URL=$(getProperty "repo.url")/$(getProperty "repo.branch")

SCRIPT_DIRECTORY=$(dirname "$0")
SUBSCRIPT_DIRECTORY="$SCRIPT_DIRECTORY"/subScripts

mkdir "$SUBSCRIPT_DIRECTORY"
curl "$REPOSITORY_URL"/"$SUBSCRIPT_DIRECTORY"/install-docker > "$SUBSCRIPT_DIRECTORY"/install-docker
curl "$REPOSITORY_URL"/"$SUBSCRIPT_DIRECTORY"/create-ssh-key > "$SUBSCRIPT_DIRECTORY"/create-ssh-key
curl "$REPOSITORY_URL"/"$SUBSCRIPT_DIRECTORY"/deploy-influx-stack > "$SUBSCRIPT_DIRECTORY"/deploy-influx-stack
chmod 700 "$SUBSCRIPT_DIRECTORY"/*

# 도커 설치
echo -e "$yellow ## Install docker $default"
printf 'Do you want to install docker (y/n)? '
read answer

if [ "$answer" != "${answer#[Yy]}" ] ;then
    sh "$SUBSCRIPT_DIRECTORY"/install-docker
else
    echo -e "$red Cancel to install docker. $default";
fi

# 스크립트 최초 실행시 유저의 도커 실행 권한을 우회하기 위한 SSH 사용
echo -e "$yellow ## Create ssh key pair  $default"
printf 'Do you want to create new ssh key pair (y/n)? '
read answer

if [ "$answer" != "${answer#[Yy]}" ] ;then
    sh "$SUBSCRIPT_DIRECTORY"/create-ssh-key
else
    echo -e "$red Cancel to create key pair. $default";
    echo "If the id_rsa and id_rsa.pub keys do not exist under the '/home/$USER/.ssh/' directory, the following command will not be executed.";
fi

# SSH 를 이용한 docker stack 배포
echo -e "$yellow ## Deploy docker stack  $default"
printf 'Do you want to deploy now (y/n)? '
read answer

if [ "$answer" != "${answer#[Yy]}" ] ;then
    sh "$SUBSCRIPT_DIRECTORY"/deploy-influx-stack

else
    echo -e "$red Cancel to deploy docker stack $default";
    echo -e "If you want to deploy docker stack, execute $yellow 'docker stack deploy --compose-file [docker-compose-path] [stack-name]' $default";
fi
